
# "improved" version which can count much higher
# uses nested values and inlines to drastically reduce check count from the naive implementation for larger ranges
# but it increases load time by generating more triggers... the big version is a significant extra load time and hurts tooltips
giga_count_resource = {
    base = 0
    # the full 10k - this REALLY extends load times by generating a SHITLOAD of triggers
    #inline_script = { script = script_values/giga_count_resource_thousands n = 0 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 1000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 2000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 3000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 4000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 5000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 6000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 7000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 8000 resource = $resource$ }
    #inline_script = { script = script_values/giga_count_resource_thousands n = 9000 resource = $resource$ }
    #modifier = {
    #    has_resource = {
    #        type = $resource$
    #        amount >= 10000
    #    }
    #    weight = 10000
    #}

    # just 0-100
    weight = 100
    modifier = {
        has_resource = {
            type = $resource$
            amount < 100
        }
        weight = value:giga_count_resource_internal_tens|resource|$resource$|n|0|
    }

    [[space]
        divide = value:giga_count_resource_space_output_modifier|resource|$resource$|research|$research|no$|
    ]

    [[mult]
        multiply = $mult$
    ]
}

giga_count_resource_internal_hundreds = {
    base = 0
    inline_script = { script = script_values/giga_count_resource_hundreds n = $n$ resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 100 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 200 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 300 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 400 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 500 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 600 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 700 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 800 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_hundreds n = @\[ $n$ + 900 ] resource = $resource$ }
}

giga_count_resource_internal_tens = {
    base = 0
    inline_script = { script = script_values/giga_count_resource_tens n = $n$ resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 10 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 20 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 30 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 40 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 50 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 60 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 70 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 80 ] resource = $resource$ }
    inline_script = { script = script_values/giga_count_resource_tens n = @\[ $n$ + 90 ] resource = $resource$ }
}

giga_count_resource_internal_ones = {
    base = $n$

    modifier = {
        has_resource = {
            type = $resource$
            amount > $n$
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 1 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 2 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 3 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 4 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 5 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 6 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 7 ]
        }
        add = 1
    }

    modifier = {
        has_resource = {
            type = $resource$
            amount > @\[ $n$ + 8 ]
        }
        add = 1
    }
}


# original version which just counts up in the naive way, up to 25
#giga_count_resource = {
#    # complex_trigger_modifier = {
#    # 	trigger = has_resource
#    # 	parameters = {
#    # 		type = $resource$
#    # 	}
#    # 	mode = weight
#    # }
#
#    # since the above doesn't work (yet)... lol
#    base = 0
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 0
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 1
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 2
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 3
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 4
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 5
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 6
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 7
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 8
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 9
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 10
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 11
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 12
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 13
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 14
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 15
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 16
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 17
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 18
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 19
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 20
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 21
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 22
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 23
#        }
#    }
#
#    modifier = {
#        add = 1
#        has_resource = {
#            type = $resource$
#            amount > 24
#        }
#    }
#
#    [[space]
#        divide = value:giga_count_resource_space_output_modifier|resource|$resource$|research|$research|no$|
#    ]
#
#    [[mult]
#        multiply = $mult$
#    ]
#}