#matrioshka_brain_0 = {
#	entity = "giga_consite_7_7_entity"
#	construction_entity = "giga_consite_7_7_entity"
#	# construction_blocks_and_blocked_by = none # BLOCKING TEST
#	portrait = "GFX_megastructure_construction_background"
#	place_entity_on_planet_plane = no
#	prerequisites = { giga_tech_matrioshka_brain_1 }
#
#	build_time = 500
#	resources = {
#		category = giga_matrioshka_brain
#		cost = {
#			alloys = 10000
#			unity = @giga_giga_unity_cost
#			influence = 300
#		}
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|10000| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
#		upkeep = { energy = 10 }
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 10000 }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
#	}
#	on_build_cancel = {
#		giga_ai_savings_refund = { CATEGORY = important RESOURCE = alloys }
#		giga_ai_savings_refund = { CATEGORY = important RESOURCE = unity }
#	}
#
#	potential = {
#		has_gigastructural_constructs = yes
#		has_technology = giga_tech_matrioshka_brain_1
#		NOT = { has_global_flag = matrioshka_brain_disabled }
#		OR = {
#			check_variable = { which = giga_matrioshka_brain_cap value = 0 }						# No Cap
#			check_variable = { which = giga_current_matrioshka_brain value < giga_matrioshka_brain_cap }
#		}
#	}
#
#	possible = {
#		custom_tooltip = { fail_text = "requires_inside_border"					is_inside_border = from }
#		custom_tooltip = { fail_text = "requires_surveyed_system"				giga_system_is_surveyed = yes }
#		custom_tooltip = { fail_text = "requires_no_binary_trinary"				giga_is_bitrinary = no }
#		custom_tooltip = { fail_text = "requires_no_colonized_planets"			NOT = { any_system_planet = { is_colony = yes } } }
#		custom_tooltip = { fail_text = "requires_no_existing_megastructure"		has_no_non_gate_megastructure = yes }
#		custom_tooltip = { fail_text = "requires_no_crisis_system"							NOT = { any_system_planet = { has_planet_flag = crisis_vital_planet } } }
#		custom_tooltip = {
#			fail_text = "requires_not_capped"
#			from = {
#				OR = {
#					check_variable = { which = giga_matrioshka_brain_cap value = 0 }						# No Cap
#					check_variable = { which = giga_current_matrioshka_brain value < giga_matrioshka_brain_cap }
#				}
#			}
#		}
#	}
#
#	placement_rules = {
#		planet_possible = {
#			custom_tooltip = { fail_text = "requires_no_existing_megastructure"		planet_has_no_megastructure = yes }
#			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
#			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
#			custom_tooltip = {
#				fail_text = "requires_standard_planet_class_o_star"
#				OR = {
#					giga_is_standard_star = yes
#					AND = {
#						giga_is_o_star_for_megas = yes
#						from = { has_technology = giga_tech_brain_o_star }
#					}
#				}
#			}
#		}
#	}
#
#	ai_weight = {
#		weight = value:giga_ai_base_giga
#
#		mult = value:giga_ai_science_mult
#		mult = value:giga_ai_upkeep|RESOURCE|alloys|AMOUNT|@matrioshka_p5_upkeep_alloys_g_star|
#		mult = value:giga_ai_no_colony
#		mult = value:giga_ai_cap_availability_boost
#		mult = value:giga_ai_materialist_plus
#		mult = value:giga_ai_weight_savings|CATEGORY|important|RESOURCE|alloys|AMOUNT|50000|
#	}
#
#	on_build_complete = {
#		save_event_target_as = giga_system
#		fromfrom.planet = {
#			save_event_target_as = giga_planet
#			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
#			giga_set_has_mega_flag = yes
#		}
#		if = {	limit = { fromfrom.planet = { giga_is_o_star_for_megas = yes } }	spawn_megastructure = { type = "matrioshka_brain_0_o_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#		if = {
#			limit = { has_global_flag = giga_matroishka_scaling }
#			if = {		limit = { fromfrom.planet = { giga_is_b_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_b_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_m_giant_star_for_megas = yes } }	spawn_megastructure = { type = "matrioshka_brain_0_m_giant_star"	owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_a_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_a_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_f_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_f_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_g_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_g_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_k_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_k_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#			else_if = {	limit = { fromfrom.planet = { giga_is_m_star_for_megas = yes } }		spawn_megastructure = { type = "matrioshka_brain_0_m_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
#		}
#		from = {
#			set_timed_country_flag = { flag = has_recently_built_matrioshka_brain years = 20 }
#			country_event = { id = giga_dialog.501 }	# Notification
#			change_variable = { which = giga_current_matrioshka_brain value = 1 }
#		}
#	}
#}

#matrioshka_brain_1 = {
#	entity = "matrioshka_brain_01_entity"
#	construction_entity = "matrioshka_brain_01_entity"
#	portrait = "GFX_megastructure_construction_background"
#	upgrade_from = { matrioshka_brain_0 }
#
#	build_time = @matrioshka_p1_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p1_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p1_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p1_produces_research_g_star
#			society_research = @matrioshka_p1_produces_research_g_star
#			engineering_research = @matrioshka_p1_produces_research_g_star
#		}
#		upkeep = { alloys = @matrioshka_p1_upkeep_alloys_g_star }
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p1_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_1
#		}
#	}
#
#	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = { country_event = { id = giga_dialog.502 } }	# Notification
#		giga_remove_system_planets = yes
#		giga_remove_system_debris = yes
#		set_asteroid_belt = { radius = 0 }
#	}
#}
#
#matrioshka_brain_2 = {
#	entity = "matrioshka_brain_02_entity"
#	construction_entity = "matrioshka_brain_p2_entity"
#	portrait = "GFX_megastructure_construction_background"
#	upgrade_from = { matrioshka_brain_1 }
#
#	build_time = @matrioshka_p2_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p2_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p2_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p2_produces_research_g_star
#			society_research = @matrioshka_p2_produces_research_g_star
#			engineering_research = @matrioshka_p2_produces_research_g_star
#		}
#		upkeep = { alloys = @matrioshka_p2_upkeep_alloys_g_star }
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p2_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_1
#		}
#	}
#
#	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = { country_event = { id = giga_dialog.503 } }	# Notification
#	}
#}
#
#matrioshka_brain_3 = {
#	entity = "matrioshka_brain_03_entity"
#	construction_entity = "matrioshka_brain_p3_entity"
#	portrait = "GFX_megastructure_construction_background"
#	upgrade_from = { matrioshka_brain_2 }
#
#	build_time = @matrioshka_p3_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p3_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p3_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p3_produces_research_g_star
#			society_research = @matrioshka_p3_produces_research_g_star
#			engineering_research = @matrioshka_p3_produces_research_g_star
#		}
#		upkeep = { alloys = @matrioshka_p3_upkeep_alloys_g_star }
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p3_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_1
#		}
#	}
#
#	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = { country_event = { id = giga_dialog.504 } }	# Notification
#	}
#}
#
#matrioshka_brain_4 = {
#	entity = "matrioshka_brain_04_entity"
#	construction_entity = "matrioshka_brain_p4_entity"
#	portrait = "GFX_megastructure_construction_background"
#	upgrade_from = { matrioshka_brain_3 }
#
#	build_time = @matrioshka_p4_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p4_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p4_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p4_produces_research_g_star
#			society_research = @matrioshka_p4_produces_research_g_star
#			engineering_research = @matrioshka_p4_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p4_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p4_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p4_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_1
#		}
#	}
#
#	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = { country_event = { id = giga_dialog.505 } }	# Notification
#	}
#}
#
#matrioshka_brain_5 = {
#	entity = "matrioshka_brain_05_entity"
#	construction_entity = "matrioshka_brain_p5_entity"
#	portrait = "GFX_megastructure_sentient_AI"
#	upgrade_from = { matrioshka_brain_4 }
#
#	country_modifier = {
#		country_unity_produces_mult = 0.15
#	}
#
#	build_time = @matrioshka_p5_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p5_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p5_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p5_produces_research_g_star
#			society_research = @matrioshka_p5_produces_research_g_star
#			engineering_research = @matrioshka_p5_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p5_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p5_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p5_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_1
#		}
#	}
#
#	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = {
#			country_event = { id = giga_dialog.506 }	# Notification
#			if = {
#				limit = {
#					NOR = {
#						has_global_flag = giga_achievements_disabled
#						has_country_flag = giga_achievement_85
#					}
#				}
#				set_country_flag = giga_achievement_85
#				set_timed_country_flag = { flag = giga_achievement_85_notification days = 30 }
#				giga_achievement_sound = yes
#			}
#		}
#	}
#}
#
#matrioshka_brain_6 = {
#	entity = "matrioshka_brain_05_entity"
#	construction_entity = ""
#	portrait = "GFX_megastructure_sentient_AI"
#	upgrade_from = { matrioshka_brain_5 }
#
#	country_modifier = {
#		country_unity_produces_mult = 0.15
#	}
#
#	build_time = @matrioshka_p6_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p6_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p6_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p6_produces_research_g_star
#			society_research = @matrioshka_p6_produces_research_g_star
#			engineering_research = @matrioshka_p6_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p6_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p6_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p6_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = {
#		NOT = { has_global_flag = virtual_reality_disabled }
#		is_giga_one_planet_origin = no
#	}
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_2
#			hidden_trigger = {
#				is_ai = no
#			}
#		}
#	}
#
#	ai_weight = { factor = 0 } # might not be the best idea compared to the mega
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = {
#			country_event = { id = giga_dialog.507 }	# Notification
#		}
#		spawn_planet = {
#			class = "pc_virtual_reality"
#			orbit_distance = 70
#			orbit_angle = 0
#			size =  @vr_size_g_star
#			init_effect = {
#				set_surveyed = { surveyed = yes surveyor = from }
#				set_all_comms_surveyed = yes
#				clear_blockers = yes
#				save_event_target_as = virtual_section
#				trigger_megastructure_icon = yes
#				set_planet_flag = forbid_guillis_planet_modifiers
#				set_planet_flag = megastructure
#				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
#				set_planet_flag = giga_virtual_reality
#
#				giga_start_ai_colony_if_safe = yes
#			}
#		}
#
#		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
#	}
#}
#
#matrioshka_brain_7 = {
#	entity = "matrioshka_brain_05_entity"
#	construction_entity = ""
#	portrait = "GFX_megastructure_sentient_AI"
#	upgrade_from = { matrioshka_brain_6 }
#
#	country_modifier = {
#		country_unity_produces_mult = 0.15
#	}
#
#
#	build_time = @matrioshka_p7_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p7_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p7_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p7_produces_research_g_star
#			society_research = @matrioshka_p7_produces_research_g_star
#			engineering_research = @matrioshka_p7_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p7_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p7_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p7_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = {
#		NOT = { has_global_flag = virtual_reality_disabled }
#		is_giga_one_planet_origin = no
#	}
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_2
#			hidden_trigger = {
#				is_ai = no
#			}
#		}
#	}
#
#	ai_weight = { factor = 0 }
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = {
#		}
#		spawn_planet = {
#			class = "pc_virtual_reality"
#			orbit_distance = 70
#			orbit_angle = 90
#			size =  @vr_size_g_star
#			init_effect = {
#				set_surveyed = { surveyed = yes surveyor = from }
#				set_all_comms_surveyed = yes
#				clear_blockers = yes
#				save_event_target_as = virtual_section
#				trigger_megastructure_icon = yes
#				set_planet_flag = forbid_guillis_planet_modifiers
#				set_planet_flag = megastructure
#				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
#				set_planet_flag = giga_virtual_reality
#
#				giga_start_ai_colony_if_safe = yes
#			}
#		}
#
#		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
#	}
#}
#
#matrioshka_brain_8 = {
#	entity = "matrioshka_brain_05_entity"
#	construction_entity = ""
#	portrait = "GFX_megastructure_sentient_AI"
#	upgrade_from = { matrioshka_brain_7 }
#
#	country_modifier = {
#		country_unity_produces_mult = 0.15
#	}
#
#
#	build_time = @matrioshka_p8_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p8_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p8_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p8_produces_research_g_star
#			society_research = @matrioshka_p8_produces_research_g_star
#			engineering_research = @matrioshka_p8_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p8_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p8_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p8_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = {
#		NOT = { has_global_flag = virtual_reality_disabled }
#		is_giga_one_planet_origin = no
#	}
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_2
#			hidden_trigger = {
#				is_ai = no
#			}
#		}
#	}
#
#	ai_weight = { factor = 0 }
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = {
#		}
#		spawn_planet = {
#			class = "pc_virtual_reality"
#			orbit_distance = 70
#			orbit_angle = 180
#			size =  @vr_size_g_star
#			init_effect = {
#				set_surveyed = { surveyed = yes surveyor = from }
#				set_all_comms_surveyed = yes
#				clear_blockers = yes
#				save_event_target_as = virtual_section
#				trigger_megastructure_icon = yes
#				set_planet_flag = forbid_guillis_planet_modifiers
#				set_planet_flag = megastructure
#				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
#				set_planet_flag = giga_virtual_reality
#
#				giga_start_ai_colony_if_safe = yes
#			}
#		}
#
#		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
#	}
#}
#
#matrioshka_brain_9 = {
#	entity = "matrioshka_brain_05_entity"
#	construction_entity = ""
#	portrait = "GFX_megastructure_sentient_AI"
#	upgrade_from = { matrioshka_brain_8 }
#
#	country_modifier = {
#		country_unity_produces_mult = 0.15
#	}
#
#
#	build_time = @matrioshka_p9_buildtime_g_star
#	resources = {
#		category = giga_gigastructures
#		cost = { alloys = @matrioshka_p9_cost_alloys_g_star unity = @matrioshka_cost_unity_g_star }
#		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@matrioshka_p9_cost_alloys_g_star| }
#		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@matrioshka_cost_unity_g_star| }
#		produces = {
#			physics_research = @matrioshka_p9_produces_research_g_star
#			society_research = @matrioshka_p9_produces_research_g_star
#			engineering_research = @matrioshka_p9_produces_research_g_star
#		}
#		upkeep = {
#			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
#			influence = @matrioshka_p9_upkeep_influence_g_star
#		}
#		upkeep = {
#			alloys = @matrioshka_p9_upkeep_alloys_g_star
#		}
#	}
#
#	on_build_start = {
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @matrioshka_p9_cost_alloys_g_star }
#		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @matrioshka_cost_unity_g_star }
#	}
#
#	potential = {
#		NOT = { has_global_flag = virtual_reality_disabled }
#		is_giga_one_planet_origin = no
#	}
#	possible = {
#		from = {
#			has_gigastructural_constructs = yes
#			has_technology = giga_tech_matrioshka_brain_2
#			hidden_trigger = {
#				is_ai = no
#			}
#		}
#	}
#
#	ai_weight = { factor = 0 }
#	on_build_complete = {
#		save_event_target_as = giga_system
#		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
#		from = {
#			country_event = { id = giga_dialog.508 }	# Notification
#			if = {
#				limit = {
#					NOR = {
#						has_global_flag = giga_achievements_disabled
#						has_country_flag = giga_achievement_96
#					}
#				}
#				set_country_flag = giga_achievement_96
#				set_timed_country_flag = { flag = giga_achievement_96_notification days = 30 }
#				giga_achievement_sound = yes
#			}
#		}
#		spawn_planet = {
#			class = "pc_virtual_reality"
#			orbit_distance = 70
#			orbit_angle = 270
#			size =  @vr_size_g_star
#			init_effect = {
#				set_surveyed = { surveyed = yes surveyor = from }
#				set_all_comms_surveyed = yes
#				clear_blockers = yes
#				save_event_target_as = virtual_section
#				trigger_megastructure_icon = yes
#				set_planet_flag = forbid_guillis_planet_modifiers
#				set_planet_flag = megastructure
#				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
#				set_planet_flag = giga_virtual_reality
#
#				giga_start_ai_colony_if_safe = yes
#			}
#		}
#
#		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
#		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
#	}
#}
