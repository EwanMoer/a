#####################################################################
### Gigas categories

# massive hack for modifiers, list uses here
# influence_produces_add -> virtual diplomat opinion boost
giga_tooltips = {
	generate_add_modifiers = {
		cost produces
	}
	generate_mult_modifiers = {
		cost produces
	}
}

planet_giga_virtual_diplomats = {
	parent = planet_jobs
	generate_add_modifiers = {
		upkeep
	}
}

planet_giga_virtual_trainers = {
	parent = planet_jobs
	generate_add_modifiers = {
		upkeep
	}
}

planet_cultivators = {
	icon = job_ehof_cultivator
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_energy_converters = {
	icon = job_ehof_energy_converter
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_infrastructure = {
	icon = "job_structure_manager"
	parent = planet_jobs_productive
}

planet_bore = {
	icon = "job_bore_manager"
	parent = planet_jobs_productive
}

planet_penrose = {
	icon = "job_penrose_manager"
	parent = planet_jobs_productive
}

giga_terraforming_by_megas = {
	parent = terraforming

	generate_mult_modifiers = {
		cost
	}
}

giga_ai_savings_tooltips = {
	generate_add_modifiers = {
		produces
	}
}

#####################################################################
### top bar

# special category for modifiers appearing in the top bar breakdown
country_modifiers = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

#####################################################################
### Low priority vanilla overrides

# changing the habitat production triggered category to add gigas habitats
planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		produces
		upkeep
	}

	triggered_produces_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = slave
			has_job_category = worker
		}
	}

	triggered_produces_modifier = {
		key = habitat_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = { 
				is_giga_habitat = yes
			}
		}
	}

	triggered_produces_modifier = {
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
		}
		trigger = {
			exists = planet
			planet = { is_artificial = no }
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
				is_pop_category = simple_drone
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding worker drones
		key = planet_jobs_worker_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding complex drones
		key = planet_jobs_specialist_only
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = ruler
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = simple_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = complex_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_and_simple_drone
		modifier_types = {
			mult
		}
		trigger = {
			OR = {
				is_pop_category = complex_drone
				is_pop_category = simple_drone
			}
			
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}
}

planet_politicians = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_nobles = {
	parent = planet_politicians
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_merchants = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_executives = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_evaluators = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_doctors = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_technician = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

# identical to vanilla
# planet_artisans = {
# 	icon = "job_artisan"
# 	parent = planet_jobs_productive
# 	generate_mult_modifiers = {
# 		produces
# 		upkeep
# 	}
# 	generate_add_modifiers = {
# 		produces
# 		upkeep
# 	}
# }

planet_priests = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_managers = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_administrators = {
	icon = "job_bureaucrat"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_chemists = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_translucers = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_refiners = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

# identical to vanilla
# planet_metallurgists = {
# 	icon = "job_foundry"
# 	parent = planet_jobs_productive
# 	generate_mult_modifiers = {
# 		produces
# 		upkeep
# 	}
# 	generate_add_modifiers = {
# 		produces
# 		upkeep
# 	}
# }

planet_culture_workers = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_miners = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}

	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}

	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_bio_trophies = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces upkeep
	}
}

planet_livestock = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
}


planet_pops = {
	parent = planets
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_unemployed = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_biologicals
		modifier_types = { 
			mult
			add 
		}
		trigger = { 
			is_lithoid = no 
			is_robot_pop = no 
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_lithoids
		modifier_types = { 
			mult
			add 
		}
		trigger = { 
			is_lithoid = yes 
		}
	}
}

#####################################################################
### Pop upkeep

pop_category_precursor = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_precursor_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_xeno_ward = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_xeno_ward_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_pre_sapients = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_pre_sapients_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

# identical to vanilla
# pop_category_purge = {
# 	parent = planet_pops
# 	generate_add_modifiers = {
# 		upkeep
# 	}
# }

pop_category_bio_trophy = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_bio_trophy_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_slave = {
	parent = planet_pops
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_slave_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

# identical to vanilla
# pop_category_robot = {
# 	parent = planet_pops
# 	generate_add_modifiers = {
# 		upkeep
# 	}
# }

pop_category_drones = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_drones_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_workers = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_workers_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_specialists = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_specialists_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_rulers = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_rulers_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = pop_category_assimilation_organics
		modifier_types = { add }
		trigger = { is_robot_pop = no }
	}
}

commercial_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

defensive_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}
}

research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}
}

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}

	parent = ships
}